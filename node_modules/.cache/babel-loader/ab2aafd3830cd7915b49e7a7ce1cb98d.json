{"ast":null,"code":"var _jsxFileName = \"/project/Ramp-FE-Challenge/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { TransactionPane } from \"./components/TransactionPane\";\nimport { Instructions } from \"./components/Instructions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [employeesIsLoading, setEmployeesIsLoading] = useState(false);\n  const [paginatedTransactionsIsLoading, setPaginatedTransactionsIsLoading] = useState(false);\n  const [displayViewMore, setDisplayViewMore] = useState(true);\n  const [pagesDisplayed, setPagesDisplayed] = useState(1);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    if (displayViewMore) {\n      setPagesDisplayed(prev => prev + 1);\n    }\n\n    setDisplayViewMore(true);\n    setEmployeesIsLoading(true);\n    setPaginatedTransactionsIsLoading(true);\n    transactionsByEmployeeUtils.invalidateData();\n    await employeeUtils.fetchAll();\n    setEmployeesIsLoading(false);\n    await paginatedTransactionsUtils.fetchAll(pagesDisplayed);\n    setPaginatedTransactionsIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    setDisplayViewMore(false);\n    setPagesDisplayed(1);\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        employeesIsLoading: employeesIsLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n\n          await loadTransactionsByEmployee(newValue.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: transactions === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampLoading--container\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-testid\": \"transaction-container\",\n            children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n              transaction: transaction\n            }, transaction.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), displayViewMore && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"RampButton\",\n            disabled: paginatedTransactionsUtils.loading,\n            onClick: async () => {\n              await loadAllTransactions();\n            },\n            children: \"View More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QrHIcWVS6AoiQuNdKtauMt2ieAQ=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","TransactionPane","Instructions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","App","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","employeesIsLoading","setEmployeesIsLoading","paginatedTransactionsIsLoading","setPaginatedTransactionsIsLoading","displayViewMore","setDisplayViewMore","pagesDisplayed","setPagesDisplayed","transactions","loadAllTransactions","prev","invalidateData","fetchAll","loadTransactionsByEmployee","employeeId","fetchById","loading","item","value","id","label","firstName","lastName","newValue","map","transaction"],"sources":["/project/Ramp-FE-Challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { Employee } from \"./utils/types\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { TransactionPane } from \"./components/TransactionPane\"\nimport { Instructions } from \"./components/Instructions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [employeesIsLoading, setEmployeesIsLoading] = useState(false)\n  const [paginatedTransactionsIsLoading, setPaginatedTransactionsIsLoading] = useState(false)\n  const [displayViewMore, setDisplayViewMore] = useState(true);\n  const [pagesDisplayed, setPagesDisplayed] = useState(1);\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  const loadAllTransactions = useCallback(async () => {\n    if (displayViewMore) {\n      setPagesDisplayed((prev) => prev + 1);\n    }\n    setDisplayViewMore(true);\n    setEmployeesIsLoading(true)\n    setPaginatedTransactionsIsLoading(true)\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll()\n    setEmployeesIsLoading(false)\n    \n    await paginatedTransactionsUtils.fetchAll(pagesDisplayed)\n    setPaginatedTransactionsIsLoading(false)\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      setDisplayViewMore(false)\n      setPagesDisplayed(1)\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          employeesIsLoading={employeesIsLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n\n            await loadTransactionsByEmployee(newValue.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          {transactions === null ? (\n            <div className=\"RampLoading--container\">Loading...</div>\n          ) : (\n            <Fragment>\n              <div data-testid=\"transaction-container\">\n                {transactions.map((transaction) => (\n                  <TransactionPane key={transaction.id} transaction={transaction} />\n                ))}\n              </div>\n              {displayViewMore && (<button\n                className=\"RampButton\"\n                disabled={paginatedTransactionsUtils.loading}\n                onClick={async () => {\n                  await loadAllTransactions()\n                }}\n              >\n                View More\n              </button>\n              )}\n            </Fragment>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}